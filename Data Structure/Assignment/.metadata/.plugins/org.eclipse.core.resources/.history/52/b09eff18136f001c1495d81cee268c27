/*
 * Linkedlist.h
 *
 *  Created on: Jan 6, 2022
 *      Author: youss
 */

#ifndef LINKEDLIST_H_
#define LINKEDLIST_H_
#include "stdlib.h"
#include "stdio.h"
#include "stdint.h"
typedef struct S_node S_node;
struct S_node {
	ELEMENT_TYPE item;
	S_node  *nextptr;
};
#define ELEMENT_TYPE uint32_t

#define DPRINTF(...)   fflush(stdout);\
						fflush(stdin);\
						printf( __VA_ARGS__);\
						fflush(stdout);\
						fflush(stdin)


typedef enum {
	List_is_null,
	list_Empty,
	list_Not_empty,
	List_no_error,
	list_item_not_exist

}LinkedList_status;

//API's
LinkedList_status Add_Node (ELEMENT_TYPE* data , S_node** head);
LinkedList_status Delete_Node (uint32_t id ,S_node** head);
LinkedList_status view_list (S_node ** head);
LinkedList_status Delete_list (S_node ** head);
LinkedList_status List_get_length(S_node ** head,unsigned int* length);
#endif /* LINKEDLIST_H_ */

/*
 * StudentDB.c
 *
 *  Created on: Jan 6, 2022
 *      Author: youss
 */

#include "studentDB.h"

List_status List_print_Student(S_student* student){
	if(g_firststudent == NULL || student == NULL) return List_error;
	DPRINTF("Student id = %d \n",student->Id);
	DPRINTF("Student name = %s \n",student->name);
	DPRINTF("Student height = %f \n",student->height);
	return List_no_error;
}
List_status List_Add_Student(S_student* student){
	if(g_firststudent == NULL || student == NULL) return List_error;
	// CREATE NEW NODE USING DYNAMIC ALLOCATION
	S_Node * new_Student = (S_Node*) malloc(sizeof(S_Node));

	//SET NEW STUDENT DATA
	new_Student->data.Id=student->Id;  //Set Id
	new_Student->data.height=student->height; // Set height
	strcpy(new_Student->data.name,student->name); // Set name
	//Add new student in the list
	if(g_firststudent == NULL)


}
List_status List_Delete_Student(uint8_t ID){}
List_status List_View_All(void){}
List_status List_Delete_All(void){}
List_status List_GetLength(uint32_t * length){}
void List_Reverse_Traverse(S_Node* head_reverse){}
